// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package party

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetPartyMapRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPartyMapRequest) Reset()         { *m = GetPartyMapRequest{} }
func (m *GetPartyMapRequest) String() string { return proto.CompactTextString(m) }
func (*GetPartyMapRequest) ProtoMessage()    {}
func (*GetPartyMapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *GetPartyMapRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartyMapRequest.Unmarshal(m, b)
}
func (m *GetPartyMapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartyMapRequest.Marshal(b, m, deterministic)
}
func (m *GetPartyMapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartyMapRequest.Merge(m, src)
}
func (m *GetPartyMapRequest) XXX_Size() int {
	return xxx_messageInfo_GetPartyMapRequest.Size(m)
}
func (m *GetPartyMapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartyMapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartyMapRequest proto.InternalMessageInfo

type PartyMap struct {
	Grid                 []*Grid  `protobuf:"bytes,1,rep,name=grid,proto3" json:"grid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartyMap) Reset()         { *m = PartyMap{} }
func (m *PartyMap) String() string { return proto.CompactTextString(m) }
func (*PartyMap) ProtoMessage()    {}
func (*PartyMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *PartyMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartyMap.Unmarshal(m, b)
}
func (m *PartyMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartyMap.Marshal(b, m, deterministic)
}
func (m *PartyMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartyMap.Merge(m, src)
}
func (m *PartyMap) XXX_Size() int {
	return xxx_messageInfo_PartyMap.Size(m)
}
func (m *PartyMap) XXX_DiscardUnknown() {
	xxx_messageInfo_PartyMap.DiscardUnknown(m)
}

var xxx_messageInfo_PartyMap proto.InternalMessageInfo

func (m *PartyMap) GetGrid() []*Grid {
	if m != nil {
		return m.Grid
	}
	return nil
}

type Grid struct {
	BackgroundImg        string   `protobuf:"bytes,1,opt,name=background_img,json=backgroundImg,proto3" json:"background_img,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Grid) Reset()         { *m = Grid{} }
func (m *Grid) String() string { return proto.CompactTextString(m) }
func (*Grid) ProtoMessage()    {}
func (*Grid) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *Grid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Grid.Unmarshal(m, b)
}
func (m *Grid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Grid.Marshal(b, m, deterministic)
}
func (m *Grid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Grid.Merge(m, src)
}
func (m *Grid) XXX_Size() int {
	return xxx_messageInfo_Grid.Size(m)
}
func (m *Grid) XXX_DiscardUnknown() {
	xxx_messageInfo_Grid.DiscardUnknown(m)
}

var xxx_messageInfo_Grid proto.InternalMessageInfo

func (m *Grid) GetBackgroundImg() string {
	if m != nil {
		return m.BackgroundImg
	}
	return ""
}

func init() {
	proto.RegisterType((*GetPartyMapRequest)(nil), "party.GetPartyMapRequest")
	proto.RegisterType((*PartyMap)(nil), "party.PartyMap")
	proto.RegisterType((*Grid)(nil), "party.Grid")
}

func init() {
	proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626)
}

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2d, 0x48, 0x2c, 0x2a, 0xa9,
	0x54, 0x12, 0xe1, 0x12, 0x72, 0x4f, 0x2d, 0x09, 0x00, 0xb1, 0x7d, 0x13, 0x0b, 0x82, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x94, 0xb4, 0xb9, 0x38, 0x60, 0x42, 0x42, 0xf2, 0x5c, 0x2c, 0xe9, 0x45,
	0x99, 0x29, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46, 0xdc, 0x7a, 0x60, 0x7d, 0x7a, 0xee, 0x45,
	0x99, 0x29, 0x41, 0x60, 0x09, 0x25, 0x5d, 0x2e, 0x16, 0x10, 0x4f, 0x48, 0x95, 0x8b, 0x2f, 0x29,
	0x31, 0x39, 0x3b, 0xbd, 0x28, 0xbf, 0x34, 0x2f, 0x25, 0x3e, 0x33, 0x37, 0x5d, 0x82, 0x51, 0x81,
	0x51, 0x83, 0x33, 0x88, 0x17, 0x21, 0xea, 0x99, 0x9b, 0x6e, 0xe4, 0xc2, 0xc5, 0x0a, 0x36, 0x5b,
	0xc8, 0x9a, 0x8b, 0x3b, 0x1d, 0x61, 0xb5, 0x90, 0x24, 0xcc, 0x64, 0x0c, 0xe7, 0x48, 0xf1, 0x43,
	0xa5, 0x60, 0xe2, 0x4a, 0x0c, 0x4e, 0x42, 0x51, 0x02, 0xe9, 0x10, 0xc1, 0xe4, 0xfc, 0x5c, 0x7d,
	0x30, 0x2b, 0x89, 0x0d, 0xec, 0x33, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x79, 0x99, 0x12,
	0xf9, 0xea, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PartyClient is the client API for Party service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PartyClient interface {
	// Returns the entire map
	GetPartyMap(ctx context.Context, in *GetPartyMapRequest, opts ...grpc.CallOption) (*PartyMap, error)
}

type partyClient struct {
	cc grpc.ClientConnInterface
}

func NewPartyClient(cc grpc.ClientConnInterface) PartyClient {
	return &partyClient{cc}
}

func (c *partyClient) GetPartyMap(ctx context.Context, in *GetPartyMapRequest, opts ...grpc.CallOption) (*PartyMap, error) {
	out := new(PartyMap)
	err := c.cc.Invoke(ctx, "/party.Party/getPartyMap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PartyServer is the server API for Party service.
type PartyServer interface {
	// Returns the entire map
	GetPartyMap(context.Context, *GetPartyMapRequest) (*PartyMap, error)
}

// UnimplementedPartyServer can be embedded to have forward compatible implementations.
type UnimplementedPartyServer struct {
}

func (*UnimplementedPartyServer) GetPartyMap(ctx context.Context, req *GetPartyMapRequest) (*PartyMap, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPartyMap not implemented")
}

func RegisterPartyServer(s *grpc.Server, srv PartyServer) {
	s.RegisterService(&_Party_serviceDesc, srv)
}

func _Party_GetPartyMap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPartyMapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartyServer).GetPartyMap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/party.Party/GetPartyMap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartyServer).GetPartyMap(ctx, req.(*GetPartyMapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Party_serviceDesc = grpc.ServiceDesc{
	ServiceName: "party.Party",
	HandlerType: (*PartyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getPartyMap",
			Handler:    _Party_GetPartyMap_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
